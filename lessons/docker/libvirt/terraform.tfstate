{
  "version": 4,
  "terraform_version": "0.12.18",
  "serial": 98,
  "lineage": "b1503d19-73b3-e236-e744-6005306d866d",
  "outputs": {
    "ips": {
      "value": [
        [
          "192.168.122.69"
        ],
        [
          "192.168.122.14"
        ],
        [
          "192.168.122.62"
        ]
      ],
      "type": [
        "tuple",
        [
          [
            "list",
            "string"
          ],
          [
            "list",
            "string"
          ],
          [
            "list",
            "string"
          ]
        ]
      ]
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "template_file",
      "name": "network_config",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "bab5ced171f7c6bc719691e20e79e3e2b135f9ca6bb9a5014e9aaec3011806a8",
            "rendered": "version: 2\nethernets:\n  ens3:\n     dhcp4: true\n",
            "template": "version: 2\nethernets:\n  ens3:\n     dhcp4: true\n",
            "vars": null
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "user_data",
      "each": "list",
      "provider": "provider.template",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "f808f66d6a8deb9d6597b8bb099d578b2e823fdce0485a4b1a686dffc4c54670",
            "rendered": "#cloud-config\nhostname: swarm1\nfqdn: swarm1.local\nmanage_etc_hosts: true\nusers:\n  - name: den\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    groups: users, admin\n    home: /home/ubuntu\n    shell: /bin/bash\n    lock_passwd: false\n    ssh-authorized-keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDIJzEvdXFCydddmORHbe8SWDxWsdM++UF2mMP25fdvVVd670ykVMZEUnfQ31VHmu1lbO3zjEN9yXyBL1ScNpw/mesXX3yuAp0cj3nXkMog1HDkfNqTVMtYarjk/71DvX7fllJxhL0zPNHjCY3u1E1Y70PljbYI4XEhQKqVfRyRyin2jG6rr98Ni53WOosa3Zq5JeXBdvmYKVjDg9xlmzhKQ4VPjgCArhPELTqprApd29P3NCcjsCcMh2d8m6Q5iIu8axgBwf2We8kjxXbU1jmSVo5rKhs9IplgXmlPqHGZcQjH1y+s59jaI2pEH+dE6eZ3jF1e29qqsBwi8F+nHSTuJP9Rb7NZkEX+Mwh86wEvCnVnfu73GvuSoAgs+smtcpazM6G16xf5EuBV9g/zCvYAmkfsU+BzUG4KGru4WjcBbzib+Vuyi/QBi5ir1xFFR93xX/d75R2X9VSAcntGcYntNV0rgYYFO5YEwF65/uaFBjhrqOedIyFWNTIM/BBTBHVpbIrgyf864RxiMmRs/KO/gTUPNcXp2G6e/IpiyXjF5HtPzR/SzDHJ97JcQU+AYaKtm1J+2F+nsY5+kGh3gRSbGfTnS2Qik2ELd/0KerBccNXMc2Dn+H0ZmpFkBVQZOuRfWcZtYqqI5WhxjfKolakfpS2x4LNZbj910EKUywVi7Q== your_emkrasnosvar@gmail.com\n\n# only cert auth via ssh (console access can still login)\nssh_pwauth: false\ndisable_root: false\nchpasswd:\n  list: |\n     ubuntu:linux\n  expire: False\n#run apt upgrade\npackage_update: true\npackage_upgrade: true\n#install packages\npackages:\n  - qemu-guest-agent\n  # - nginx\n  # - npm\n  # - maven\n  # - default-jdk\n  #for docker\n  - apt-transport-https\n  - ca-certificates\n  - curl\n  - gnupg-agent\n  - software-properties-common\nruncmd:\n  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -\n  - add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\n  - apt update -y\n  - apt install -y docker-ce docker-ce-cli containerd.io\n  - systemctl start docker\n  - systemctl enable docker\n  # install docker-compose following the guide: https://docs.docker.com/compose/install/\n  - sudo curl -L \"https://github.com/docker/compose/releases/download/1.26.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\n  - sudo chmod +x /usr/local/bin/docker-compose\n# test of writing content\nwrite_files:\n  - content: |\n      The quick brown fox jumped \n      over the lazy dog\n    path: /root/test.txt\n\n# written to /var/log/cloud-init-output.log\nfinal_message: \"The system is finall up, after $UPTIME seconds\"\npower_state:\n  mode: reboot\n  message: Restarting after installing docker \u0026 docker-compose\n",
            "template": "#cloud-config\nhostname: ${hostname}\nfqdn: ${fqdn}\nmanage_etc_hosts: true\nusers:\n  - name: den\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    groups: users, admin\n    home: /home/ubuntu\n    shell: /bin/bash\n    lock_passwd: false\n    ssh-authorized-keys:\n      - ${file(\"/home/den/.ssh/id_rsa.pub\")}\n# only cert auth via ssh (console access can still login)\nssh_pwauth: false\ndisable_root: false\nchpasswd:\n  list: |\n     ubuntu:linux\n  expire: False\n#run apt upgrade\npackage_update: true\npackage_upgrade: true\n#install packages\npackages:\n  - qemu-guest-agent\n  # - nginx\n  # - npm\n  # - maven\n  # - default-jdk\n  #for docker\n  - apt-transport-https\n  - ca-certificates\n  - curl\n  - gnupg-agent\n  - software-properties-common\nruncmd:\n  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -\n  - add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\n  - apt update -y\n  - apt install -y docker-ce docker-ce-cli containerd.io\n  - systemctl start docker\n  - systemctl enable docker\n  # install docker-compose following the guide: https://docs.docker.com/compose/install/\n  - sudo curl -L \"https://github.com/docker/compose/releases/download/1.26.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\n  - sudo chmod +x /usr/local/bin/docker-compose\n# test of writing content\nwrite_files:\n  - content: |\n      The quick brown fox jumped \n      over the lazy dog\n    path: /root/test.txt\n\n# written to /var/log/cloud-init-output.log\nfinal_message: \"The system is finall up, after $UPTIME seconds\"\npower_state:\n  mode: reboot\n  message: Restarting after installing docker \u0026 docker-compose\n",
            "vars": {
              "fqdn": "swarm1.local",
              "hostname": "swarm1"
            }
          }
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "92676410aba6bbca68f5cf4ed2ba7f072d5475f019f7d2113cacacc69cd1e5e3",
            "rendered": "#cloud-config\nhostname: swarm2\nfqdn: swarm2.local\nmanage_etc_hosts: true\nusers:\n  - name: den\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    groups: users, admin\n    home: /home/ubuntu\n    shell: /bin/bash\n    lock_passwd: false\n    ssh-authorized-keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDIJzEvdXFCydddmORHbe8SWDxWsdM++UF2mMP25fdvVVd670ykVMZEUnfQ31VHmu1lbO3zjEN9yXyBL1ScNpw/mesXX3yuAp0cj3nXkMog1HDkfNqTVMtYarjk/71DvX7fllJxhL0zPNHjCY3u1E1Y70PljbYI4XEhQKqVfRyRyin2jG6rr98Ni53WOosa3Zq5JeXBdvmYKVjDg9xlmzhKQ4VPjgCArhPELTqprApd29P3NCcjsCcMh2d8m6Q5iIu8axgBwf2We8kjxXbU1jmSVo5rKhs9IplgXmlPqHGZcQjH1y+s59jaI2pEH+dE6eZ3jF1e29qqsBwi8F+nHSTuJP9Rb7NZkEX+Mwh86wEvCnVnfu73GvuSoAgs+smtcpazM6G16xf5EuBV9g/zCvYAmkfsU+BzUG4KGru4WjcBbzib+Vuyi/QBi5ir1xFFR93xX/d75R2X9VSAcntGcYntNV0rgYYFO5YEwF65/uaFBjhrqOedIyFWNTIM/BBTBHVpbIrgyf864RxiMmRs/KO/gTUPNcXp2G6e/IpiyXjF5HtPzR/SzDHJ97JcQU+AYaKtm1J+2F+nsY5+kGh3gRSbGfTnS2Qik2ELd/0KerBccNXMc2Dn+H0ZmpFkBVQZOuRfWcZtYqqI5WhxjfKolakfpS2x4LNZbj910EKUywVi7Q== your_emkrasnosvar@gmail.com\n\n# only cert auth via ssh (console access can still login)\nssh_pwauth: false\ndisable_root: false\nchpasswd:\n  list: |\n     ubuntu:linux\n  expire: False\n#run apt upgrade\npackage_update: true\npackage_upgrade: true\n#install packages\npackages:\n  - qemu-guest-agent\n  # - nginx\n  # - npm\n  # - maven\n  # - default-jdk\n  #for docker\n  - apt-transport-https\n  - ca-certificates\n  - curl\n  - gnupg-agent\n  - software-properties-common\nruncmd:\n  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -\n  - add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\n  - apt update -y\n  - apt install -y docker-ce docker-ce-cli containerd.io\n  - systemctl start docker\n  - systemctl enable docker\n  # install docker-compose following the guide: https://docs.docker.com/compose/install/\n  - sudo curl -L \"https://github.com/docker/compose/releases/download/1.26.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\n  - sudo chmod +x /usr/local/bin/docker-compose\n# test of writing content\nwrite_files:\n  - content: |\n      The quick brown fox jumped \n      over the lazy dog\n    path: /root/test.txt\n\n# written to /var/log/cloud-init-output.log\nfinal_message: \"The system is finall up, after $UPTIME seconds\"\npower_state:\n  mode: reboot\n  message: Restarting after installing docker \u0026 docker-compose\n",
            "template": "#cloud-config\nhostname: ${hostname}\nfqdn: ${fqdn}\nmanage_etc_hosts: true\nusers:\n  - name: den\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    groups: users, admin\n    home: /home/ubuntu\n    shell: /bin/bash\n    lock_passwd: false\n    ssh-authorized-keys:\n      - ${file(\"/home/den/.ssh/id_rsa.pub\")}\n# only cert auth via ssh (console access can still login)\nssh_pwauth: false\ndisable_root: false\nchpasswd:\n  list: |\n     ubuntu:linux\n  expire: False\n#run apt upgrade\npackage_update: true\npackage_upgrade: true\n#install packages\npackages:\n  - qemu-guest-agent\n  # - nginx\n  # - npm\n  # - maven\n  # - default-jdk\n  #for docker\n  - apt-transport-https\n  - ca-certificates\n  - curl\n  - gnupg-agent\n  - software-properties-common\nruncmd:\n  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -\n  - add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\n  - apt update -y\n  - apt install -y docker-ce docker-ce-cli containerd.io\n  - systemctl start docker\n  - systemctl enable docker\n  # install docker-compose following the guide: https://docs.docker.com/compose/install/\n  - sudo curl -L \"https://github.com/docker/compose/releases/download/1.26.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\n  - sudo chmod +x /usr/local/bin/docker-compose\n# test of writing content\nwrite_files:\n  - content: |\n      The quick brown fox jumped \n      over the lazy dog\n    path: /root/test.txt\n\n# written to /var/log/cloud-init-output.log\nfinal_message: \"The system is finall up, after $UPTIME seconds\"\npower_state:\n  mode: reboot\n  message: Restarting after installing docker \u0026 docker-compose\n",
            "vars": {
              "fqdn": "swarm2.local",
              "hostname": "swarm2"
            }
          }
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "13ed8aa9412f76730b6fdba0fc638dea6ff470388ebf406c4a746ed5c49e83ea",
            "rendered": "#cloud-config\nhostname: swarm3\nfqdn: swarm3.local\nmanage_etc_hosts: true\nusers:\n  - name: den\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    groups: users, admin\n    home: /home/ubuntu\n    shell: /bin/bash\n    lock_passwd: false\n    ssh-authorized-keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDIJzEvdXFCydddmORHbe8SWDxWsdM++UF2mMP25fdvVVd670ykVMZEUnfQ31VHmu1lbO3zjEN9yXyBL1ScNpw/mesXX3yuAp0cj3nXkMog1HDkfNqTVMtYarjk/71DvX7fllJxhL0zPNHjCY3u1E1Y70PljbYI4XEhQKqVfRyRyin2jG6rr98Ni53WOosa3Zq5JeXBdvmYKVjDg9xlmzhKQ4VPjgCArhPELTqprApd29P3NCcjsCcMh2d8m6Q5iIu8axgBwf2We8kjxXbU1jmSVo5rKhs9IplgXmlPqHGZcQjH1y+s59jaI2pEH+dE6eZ3jF1e29qqsBwi8F+nHSTuJP9Rb7NZkEX+Mwh86wEvCnVnfu73GvuSoAgs+smtcpazM6G16xf5EuBV9g/zCvYAmkfsU+BzUG4KGru4WjcBbzib+Vuyi/QBi5ir1xFFR93xX/d75R2X9VSAcntGcYntNV0rgYYFO5YEwF65/uaFBjhrqOedIyFWNTIM/BBTBHVpbIrgyf864RxiMmRs/KO/gTUPNcXp2G6e/IpiyXjF5HtPzR/SzDHJ97JcQU+AYaKtm1J+2F+nsY5+kGh3gRSbGfTnS2Qik2ELd/0KerBccNXMc2Dn+H0ZmpFkBVQZOuRfWcZtYqqI5WhxjfKolakfpS2x4LNZbj910EKUywVi7Q== your_emkrasnosvar@gmail.com\n\n# only cert auth via ssh (console access can still login)\nssh_pwauth: false\ndisable_root: false\nchpasswd:\n  list: |\n     ubuntu:linux\n  expire: False\n#run apt upgrade\npackage_update: true\npackage_upgrade: true\n#install packages\npackages:\n  - qemu-guest-agent\n  # - nginx\n  # - npm\n  # - maven\n  # - default-jdk\n  #for docker\n  - apt-transport-https\n  - ca-certificates\n  - curl\n  - gnupg-agent\n  - software-properties-common\nruncmd:\n  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -\n  - add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\n  - apt update -y\n  - apt install -y docker-ce docker-ce-cli containerd.io\n  - systemctl start docker\n  - systemctl enable docker\n  # install docker-compose following the guide: https://docs.docker.com/compose/install/\n  - sudo curl -L \"https://github.com/docker/compose/releases/download/1.26.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\n  - sudo chmod +x /usr/local/bin/docker-compose\n# test of writing content\nwrite_files:\n  - content: |\n      The quick brown fox jumped \n      over the lazy dog\n    path: /root/test.txt\n\n# written to /var/log/cloud-init-output.log\nfinal_message: \"The system is finall up, after $UPTIME seconds\"\npower_state:\n  mode: reboot\n  message: Restarting after installing docker \u0026 docker-compose\n",
            "template": "#cloud-config\nhostname: ${hostname}\nfqdn: ${fqdn}\nmanage_etc_hosts: true\nusers:\n  - name: den\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    groups: users, admin\n    home: /home/ubuntu\n    shell: /bin/bash\n    lock_passwd: false\n    ssh-authorized-keys:\n      - ${file(\"/home/den/.ssh/id_rsa.pub\")}\n# only cert auth via ssh (console access can still login)\nssh_pwauth: false\ndisable_root: false\nchpasswd:\n  list: |\n     ubuntu:linux\n  expire: False\n#run apt upgrade\npackage_update: true\npackage_upgrade: true\n#install packages\npackages:\n  - qemu-guest-agent\n  # - nginx\n  # - npm\n  # - maven\n  # - default-jdk\n  #for docker\n  - apt-transport-https\n  - ca-certificates\n  - curl\n  - gnupg-agent\n  - software-properties-common\nruncmd:\n  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -\n  - add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\n  - apt update -y\n  - apt install -y docker-ce docker-ce-cli containerd.io\n  - systemctl start docker\n  - systemctl enable docker\n  # install docker-compose following the guide: https://docs.docker.com/compose/install/\n  - sudo curl -L \"https://github.com/docker/compose/releases/download/1.26.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\n  - sudo chmod +x /usr/local/bin/docker-compose\n# test of writing content\nwrite_files:\n  - content: |\n      The quick brown fox jumped \n      over the lazy dog\n    path: /root/test.txt\n\n# written to /var/log/cloud-init-output.log\nfinal_message: \"The system is finall up, after $UPTIME seconds\"\npower_state:\n  mode: reboot\n  message: Restarting after installing docker \u0026 docker-compose\n",
            "vars": {
              "fqdn": "swarm3.local",
              "hostname": "swarm3"
            }
          }
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_cloudinit_disk",
      "name": "commoninit",
      "each": "list",
      "provider": "provider.libvirt",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "/var/lib/libvirt/images/swarm1-commoninit.iso;5f2ff727-6258-6592-692e-44a03bc4f4d4",
            "meta_data": "",
            "name": "swarm1-commoninit.iso",
            "network_config": "version: 2\nethernets:\n  ens3:\n     dhcp4: true\n",
            "pool": "default",
            "user_data": "#cloud-config\nhostname: swarm1\nfqdn: swarm1.local\nmanage_etc_hosts: true\nusers:\n  - name: den\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    groups: users, admin\n    home: /home/ubuntu\n    shell: /bin/bash\n    lock_passwd: false\n    ssh-authorized-keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDIJzEvdXFCydddmORHbe8SWDxWsdM++UF2mMP25fdvVVd670ykVMZEUnfQ31VHmu1lbO3zjEN9yXyBL1ScNpw/mesXX3yuAp0cj3nXkMog1HDkfNqTVMtYarjk/71DvX7fllJxhL0zPNHjCY3u1E1Y70PljbYI4XEhQKqVfRyRyin2jG6rr98Ni53WOosa3Zq5JeXBdvmYKVjDg9xlmzhKQ4VPjgCArhPELTqprApd29P3NCcjsCcMh2d8m6Q5iIu8axgBwf2We8kjxXbU1jmSVo5rKhs9IplgXmlPqHGZcQjH1y+s59jaI2pEH+dE6eZ3jF1e29qqsBwi8F+nHSTuJP9Rb7NZkEX+Mwh86wEvCnVnfu73GvuSoAgs+smtcpazM6G16xf5EuBV9g/zCvYAmkfsU+BzUG4KGru4WjcBbzib+Vuyi/QBi5ir1xFFR93xX/d75R2X9VSAcntGcYntNV0rgYYFO5YEwF65/uaFBjhrqOedIyFWNTIM/BBTBHVpbIrgyf864RxiMmRs/KO/gTUPNcXp2G6e/IpiyXjF5HtPzR/SzDHJ97JcQU+AYaKtm1J+2F+nsY5+kGh3gRSbGfTnS2Qik2ELd/0KerBccNXMc2Dn+H0ZmpFkBVQZOuRfWcZtYqqI5WhxjfKolakfpS2x4LNZbj910EKUywVi7Q== your_emkrasnosvar@gmail.com\n\n# only cert auth via ssh (console access can still login)\nssh_pwauth: false\ndisable_root: false\nchpasswd:\n  list: |\n     ubuntu:linux\n  expire: False\n#run apt upgrade\npackage_update: true\npackage_upgrade: true\n#install packages\npackages:\n  - qemu-guest-agent\n  # - nginx\n  # - npm\n  # - maven\n  # - default-jdk\n  #for docker\n  - apt-transport-https\n  - ca-certificates\n  - curl\n  - gnupg-agent\n  - software-properties-common\nruncmd:\n  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -\n  - add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\n  - apt update -y\n  - apt install -y docker-ce docker-ce-cli containerd.io\n  - systemctl start docker\n  - systemctl enable docker\n  # install docker-compose following the guide: https://docs.docker.com/compose/install/\n  - sudo curl -L \"https://github.com/docker/compose/releases/download/1.26.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\n  - sudo chmod +x /usr/local/bin/docker-compose\n# test of writing content\nwrite_files:\n  - content: |\n      The quick brown fox jumped \n      over the lazy dog\n    path: /root/test.txt\n\n# written to /var/log/cloud-init-output.log\nfinal_message: \"The system is finall up, after $UPTIME seconds\"\npower_state:\n  mode: reboot\n  message: Restarting after installing docker \u0026 docker-compose\n"
          },
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "id": "/var/lib/libvirt/images/swarm2-commoninit.iso;5f2ff729-80ae-2788-491d-2f6dfddcd8ce",
            "meta_data": "",
            "name": "swarm2-commoninit.iso",
            "network_config": "version: 2\nethernets:\n  ens3:\n     dhcp4: true\n",
            "pool": "default",
            "user_data": "#cloud-config\nhostname: swarm2\nfqdn: swarm2.local\nmanage_etc_hosts: true\nusers:\n  - name: den\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    groups: users, admin\n    home: /home/ubuntu\n    shell: /bin/bash\n    lock_passwd: false\n    ssh-authorized-keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDIJzEvdXFCydddmORHbe8SWDxWsdM++UF2mMP25fdvVVd670ykVMZEUnfQ31VHmu1lbO3zjEN9yXyBL1ScNpw/mesXX3yuAp0cj3nXkMog1HDkfNqTVMtYarjk/71DvX7fllJxhL0zPNHjCY3u1E1Y70PljbYI4XEhQKqVfRyRyin2jG6rr98Ni53WOosa3Zq5JeXBdvmYKVjDg9xlmzhKQ4VPjgCArhPELTqprApd29P3NCcjsCcMh2d8m6Q5iIu8axgBwf2We8kjxXbU1jmSVo5rKhs9IplgXmlPqHGZcQjH1y+s59jaI2pEH+dE6eZ3jF1e29qqsBwi8F+nHSTuJP9Rb7NZkEX+Mwh86wEvCnVnfu73GvuSoAgs+smtcpazM6G16xf5EuBV9g/zCvYAmkfsU+BzUG4KGru4WjcBbzib+Vuyi/QBi5ir1xFFR93xX/d75R2X9VSAcntGcYntNV0rgYYFO5YEwF65/uaFBjhrqOedIyFWNTIM/BBTBHVpbIrgyf864RxiMmRs/KO/gTUPNcXp2G6e/IpiyXjF5HtPzR/SzDHJ97JcQU+AYaKtm1J+2F+nsY5+kGh3gRSbGfTnS2Qik2ELd/0KerBccNXMc2Dn+H0ZmpFkBVQZOuRfWcZtYqqI5WhxjfKolakfpS2x4LNZbj910EKUywVi7Q== your_emkrasnosvar@gmail.com\n\n# only cert auth via ssh (console access can still login)\nssh_pwauth: false\ndisable_root: false\nchpasswd:\n  list: |\n     ubuntu:linux\n  expire: False\n#run apt upgrade\npackage_update: true\npackage_upgrade: true\n#install packages\npackages:\n  - qemu-guest-agent\n  # - nginx\n  # - npm\n  # - maven\n  # - default-jdk\n  #for docker\n  - apt-transport-https\n  - ca-certificates\n  - curl\n  - gnupg-agent\n  - software-properties-common\nruncmd:\n  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -\n  - add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\n  - apt update -y\n  - apt install -y docker-ce docker-ce-cli containerd.io\n  - systemctl start docker\n  - systemctl enable docker\n  # install docker-compose following the guide: https://docs.docker.com/compose/install/\n  - sudo curl -L \"https://github.com/docker/compose/releases/download/1.26.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\n  - sudo chmod +x /usr/local/bin/docker-compose\n# test of writing content\nwrite_files:\n  - content: |\n      The quick brown fox jumped \n      over the lazy dog\n    path: /root/test.txt\n\n# written to /var/log/cloud-init-output.log\nfinal_message: \"The system is finall up, after $UPTIME seconds\"\npower_state:\n  mode: reboot\n  message: Restarting after installing docker \u0026 docker-compose\n"
          },
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "id": "/var/lib/libvirt/images/swarm3-commoninit.iso;5f2ff727-4f6d-2dc4-871d-08503cff301d",
            "meta_data": "",
            "name": "swarm3-commoninit.iso",
            "network_config": "version: 2\nethernets:\n  ens3:\n     dhcp4: true\n",
            "pool": "default",
            "user_data": "#cloud-config\nhostname: swarm3\nfqdn: swarm3.local\nmanage_etc_hosts: true\nusers:\n  - name: den\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    groups: users, admin\n    home: /home/ubuntu\n    shell: /bin/bash\n    lock_passwd: false\n    ssh-authorized-keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDIJzEvdXFCydddmORHbe8SWDxWsdM++UF2mMP25fdvVVd670ykVMZEUnfQ31VHmu1lbO3zjEN9yXyBL1ScNpw/mesXX3yuAp0cj3nXkMog1HDkfNqTVMtYarjk/71DvX7fllJxhL0zPNHjCY3u1E1Y70PljbYI4XEhQKqVfRyRyin2jG6rr98Ni53WOosa3Zq5JeXBdvmYKVjDg9xlmzhKQ4VPjgCArhPELTqprApd29P3NCcjsCcMh2d8m6Q5iIu8axgBwf2We8kjxXbU1jmSVo5rKhs9IplgXmlPqHGZcQjH1y+s59jaI2pEH+dE6eZ3jF1e29qqsBwi8F+nHSTuJP9Rb7NZkEX+Mwh86wEvCnVnfu73GvuSoAgs+smtcpazM6G16xf5EuBV9g/zCvYAmkfsU+BzUG4KGru4WjcBbzib+Vuyi/QBi5ir1xFFR93xX/d75R2X9VSAcntGcYntNV0rgYYFO5YEwF65/uaFBjhrqOedIyFWNTIM/BBTBHVpbIrgyf864RxiMmRs/KO/gTUPNcXp2G6e/IpiyXjF5HtPzR/SzDHJ97JcQU+AYaKtm1J+2F+nsY5+kGh3gRSbGfTnS2Qik2ELd/0KerBccNXMc2Dn+H0ZmpFkBVQZOuRfWcZtYqqI5WhxjfKolakfpS2x4LNZbj910EKUywVi7Q== your_emkrasnosvar@gmail.com\n\n# only cert auth via ssh (console access can still login)\nssh_pwauth: false\ndisable_root: false\nchpasswd:\n  list: |\n     ubuntu:linux\n  expire: False\n#run apt upgrade\npackage_update: true\npackage_upgrade: true\n#install packages\npackages:\n  - qemu-guest-agent\n  # - nginx\n  # - npm\n  # - maven\n  # - default-jdk\n  #for docker\n  - apt-transport-https\n  - ca-certificates\n  - curl\n  - gnupg-agent\n  - software-properties-common\nruncmd:\n  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -\n  - add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\n  - apt update -y\n  - apt install -y docker-ce docker-ce-cli containerd.io\n  - systemctl start docker\n  - systemctl enable docker\n  # install docker-compose following the guide: https://docs.docker.com/compose/install/\n  - sudo curl -L \"https://github.com/docker/compose/releases/download/1.26.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\n  - sudo chmod +x /usr/local/bin/docker-compose\n# test of writing content\nwrite_files:\n  - content: |\n      The quick brown fox jumped \n      over the lazy dog\n    path: /root/test.txt\n\n# written to /var/log/cloud-init-output.log\nfinal_message: \"The system is finall up, after $UPTIME seconds\"\npower_state:\n  mode: reboot\n  message: Restarting after installing docker \u0026 docker-compose\n"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_domain",
      "name": "domain-ubuntu",
      "each": "list",
      "provider": "provider.libvirt",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/var/lib/libvirt/images/swarm1-commoninit.iso;5f2ff727-6258-6592-692e-44a03bc4f4d4",
            "cmdline": [],
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": null,
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/var/lib/libvirt/images/os_image.swarm1",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": "",
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [
              {
                "autoport": true,
                "listen_address": "127.0.0.1",
                "listen_type": "address",
                "type": "spice"
              }
            ],
            "id": "80fae976-40a9-46fa-97ad-c375c38676e1",
            "initrd": "",
            "kernel": "",
            "machine": "ubuntu",
            "memory": 1024,
            "metadata": null,
            "name": "swarm1",
            "network_interface": [
              {
                "addresses": [
                  "192.168.122.69"
                ],
                "bridge": "",
                "hostname": "",
                "mac": "52:54:00:42:0B:D0",
                "macvtap": "",
                "network_id": "f5a2c96f-17ac-4017-b8b1-ae4daa81752e",
                "network_name": "default",
                "passthrough": "",
                "vepa": "",
                "wait_for_lease": false
              }
            ],
            "nvram": [],
            "qemu_agent": false,
            "running": true,
            "timeouts": null,
            "vcpu": 1,
            "video": [],
            "xml": []
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "libvirt_cloudinit_disk.commoninit",
            "libvirt_volume.os_image"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/var/lib/libvirt/images/swarm2-commoninit.iso;5f2ff729-80ae-2788-491d-2f6dfddcd8ce",
            "cmdline": [],
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": null,
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/var/lib/libvirt/images/os_image.swarm2",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": "",
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [
              {
                "autoport": true,
                "listen_address": "127.0.0.1",
                "listen_type": "address",
                "type": "spice"
              }
            ],
            "id": "b368529c-8936-4a3e-8729-3c0abfd5e05a",
            "initrd": "",
            "kernel": "",
            "machine": "ubuntu",
            "memory": 1024,
            "metadata": null,
            "name": "swarm2",
            "network_interface": [
              {
                "addresses": [
                  "192.168.122.14"
                ],
                "bridge": "",
                "hostname": "",
                "mac": "52:54:00:4A:E4:7C",
                "macvtap": "",
                "network_id": "f5a2c96f-17ac-4017-b8b1-ae4daa81752e",
                "network_name": "default",
                "passthrough": "",
                "vepa": "",
                "wait_for_lease": false
              }
            ],
            "nvram": [],
            "qemu_agent": false,
            "running": true,
            "timeouts": null,
            "vcpu": 1,
            "video": [],
            "xml": []
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "libvirt_cloudinit_disk.commoninit",
            "libvirt_volume.os_image"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/var/lib/libvirt/images/swarm3-commoninit.iso;5f2ff727-4f6d-2dc4-871d-08503cff301d",
            "cmdline": [],
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": null,
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/var/lib/libvirt/images/os_image.swarm3",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": "",
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [
              {
                "autoport": true,
                "listen_address": "127.0.0.1",
                "listen_type": "address",
                "type": "spice"
              }
            ],
            "id": "74ff6dc4-c3e4-4c8d-9de2-b489be1b8779",
            "initrd": "",
            "kernel": "",
            "machine": "ubuntu",
            "memory": 1024,
            "metadata": null,
            "name": "swarm3",
            "network_interface": [
              {
                "addresses": [
                  "192.168.122.62"
                ],
                "bridge": "",
                "hostname": "",
                "mac": "52:54:00:4A:B7:7B",
                "macvtap": "",
                "network_id": "f5a2c96f-17ac-4017-b8b1-ae4daa81752e",
                "network_name": "default",
                "passthrough": "",
                "vepa": "",
                "wait_for_lease": false
              }
            ],
            "nvram": [],
            "qemu_agent": false,
            "running": true,
            "timeouts": null,
            "vcpu": 1,
            "video": [],
            "xml": []
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "libvirt_cloudinit_disk.commoninit",
            "libvirt_volume.os_image"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_volume",
      "name": "os_image",
      "each": "list",
      "provider": "provider.libvirt",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "base_volume_id": null,
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/lib/libvirt/images/os_image.swarm1",
            "name": "os_image.swarm1",
            "pool": "default",
            "size": 10737418240,
            "source": "/home/den/git_projects/libvirt/images/focal-server-cloudimg-amd64-disk-kvm.img",
            "xml": []
          },
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "base_volume_id": null,
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/lib/libvirt/images/os_image.swarm2",
            "name": "os_image.swarm2",
            "pool": "default",
            "size": 10737418240,
            "source": "/home/den/git_projects/libvirt/images/focal-server-cloudimg-amd64-disk-kvm.img",
            "xml": []
          },
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "base_volume_id": null,
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/lib/libvirt/images/os_image.swarm3",
            "name": "os_image.swarm3",
            "pool": "default",
            "size": 10737418240,
            "source": "/home/den/git_projects/libvirt/images/focal-server-cloudimg-amd64-disk-kvm.img",
            "xml": []
          },
          "private": "bnVsbA=="
        }
      ]
    }
  ]
}
